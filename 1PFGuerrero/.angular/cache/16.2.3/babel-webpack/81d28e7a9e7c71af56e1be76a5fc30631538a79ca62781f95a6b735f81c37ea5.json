{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DrawerService {\n  toggleDrawer() {\n    this._drawerOpen.next(!this._drawerOpen.value);\n  }\n  constructor() {\n    this._drawerOpen = new BehaviorSubject(false);\n    this.drawerOpen$ = this._drawerOpen.asObservable();\n  }\n}\n_class = DrawerService;\n_class.ɵfac = function DrawerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","DrawerService","toggleDrawer","_drawerOpen","next","value","constructor","drawerOpen$","asObservable","factory","ɵfac","providedIn"],"sources":["/Users/chechog/Documents/WorkspaceAngular/CODER/GithubCoderHouse/AngularCoderSergioGuerrero/1PFGuerrero/src/app/services/drawer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrawerService {\n\n  private _drawerOpen = new BehaviorSubject<boolean>(false);\n  drawerOpen$ = this._drawerOpen.asObservable();\n\n  toggleDrawer() {\n    this._drawerOpen.next(!this._drawerOpen.value);\n  }\n\n  constructor() { }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,aAAa;EAKxBC,YAAYA,CAAA;IACV,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,CAAC,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;EAChD;EAEAC,YAAA;IAPQ,KAAAH,WAAW,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IACzD,KAAAO,WAAW,GAAG,IAAI,CAACJ,WAAW,CAACK,YAAY,EAAE;EAM7B;;SATLP,aAAa;;mBAAbA,MAAa;AAAA;;SAAbA,MAAa;EAAAQ,OAAA,EAAbR,MAAa,CAAAS,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}